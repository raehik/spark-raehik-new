---
- name: Install Linux
  pacman: name=linux,linux-firmware state=present

- name: Install LVM
  pacman:
    name: lvm2
    state: present

- name: Install AMD microcode
  pacman: name=amd-ucode state=present

- name: Install boot tools
  pacman:
    name: efitools, sbsigntools, efibootmgr, tpm2-tools
    state: present

# cgroup param switches from cgroups v1 -> v2, which allows unprivileged users
# to do some resource dividing
# see: https://wiki.archlinux.org/index.php/Cgroups#As_unprivileged_user
- name: Build kernel parameters and save as local variable
  set_fact:
    kernel_cmdline: "rw root=/dev/{{ hostname }}/root resume=/dev/{{ hostname }}/swap cryptdevice=PARTLABEL={{ hostname }}:cryptlvm:allow-discards systemd.unified_cgroup_hierarchy=1"

- name: Add sbupdate config file
  template:
    src: sbupdate.conf.j2
    dest: /etc/sbupdate.conf
  vars:
    cmdline: "{{ kernel_cmdline }}"

- name: Check if systemd-boot bootloader is installed
  command: bootctl is-installed
  register: systemd_boot_installed
  ignore_errors: true
  changed_when: false

- name: Install systemd-boot bootloader
  command: bootctl --path=/boot install
  when: systemd_boot_installed is failed

- name: Install systemd-boot entry - mkinitcpio
  template:
    src: entry.conf.j2
    dest: /boot/loader/entries/{{ hostname }}-mkinitcpio.conf
  vars:
  - title: "{{ hostname }}-mkinitcpio"
    initramfs: /initramfs-linux.img
    cmdline: "{{ kernel_cmdline }}"

- name: Install systemd-boot entry - mkinitcpio fallback
  template:
    src: entry.conf.j2
    dest: /boot/loader/entries/{{ hostname }}-mkinitcpio-fallback.conf
  vars:
  - title: "{{ hostname }}-mkinitcpio-fallback"
    initramfs: /initramfs-linux-fallback.img
    cmdline: "{{ kernel_cmdline }}"

- name: Install systemd-boot config
  template:
    src: loader.conf.j2
    dest: /boot/loader/loader.conf
  vars:
  - default_entry: "{{ hostname }}-mkinitcpio"
